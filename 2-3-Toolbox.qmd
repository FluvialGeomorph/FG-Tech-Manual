```{r library, include=FALSE}
library(knitr)
library(png)
library(dplyr)
library(magrittr)
```

```{r import, include=FALSE}
params_df <- read.csv("parameters.csv")
```

```{r table_functions, include=FALSE}
#' @title Creates a table of parameters for a tool.
#'
#' @param params_df       data frame; A data frame of parameters. Must have the
#'                        columns: tool, parameter_name, data_type, description, #'                        required. 
#' @param tool            character; The name of the tool whose parameters will
#'                        be displayed. 
#' @param caption         character; The text of the table caption for the 
#'                        output table. 
#'
#' @return A knitr::kable containing records for each of the parameters for the 
#' specified tool. Table includes parameter_name, data_type, description, 
#' required. 
#'
params_table <- function(params_df, tool, caption) {
  param_names <- c("Parameter", "Type", "Description", "Required")
  tool_dd <- filter(params_df, tool == !!tool) %>%
             select(parameter_name:required)
  kable(tool_dd, col.names = param_names,
        caption = caption)

}
```

# Toolbox
This chapter describes the FluvialGeomorph toolbox structure and the products it creates. This chapter begins with a description of the platforms used, the structure of the FluvialGeomorph ArcGIS toolbox and concludes with a description of the products created. 


## Platforms
The FluvialGeomorph toolbox uses [ESRI](https://www.esri.com/en-us/home) and open source software to combine several platforms, each chosen based on their strengths, to construct a custom toolbox for rapid fluvial geomorphology analysis. 

* [ArcGIS Desktop](https://desktop.arcgis.com/en/) -Desktop (ArcMap and ArcGIS Pro) are industry standard enterprise desktop GIS products for conducting geospatial analysis. The ArcGIS desktop applications contain an enormous number of commercial-off-the shelf (COTS) geospatial tools for performing sophisticated analyses and visualization. 
* [ArcGIS toolbox](https://pro.arcgis.com/en/pro-app/latest/help/analysis/geoprocessing/basics/use-a-custom-geoprocessing-tool.htm) - ArcGIS Desktop allows for the creation of sophisticated custom geospatial toolboxes to be built that combine ESRI's COTS geoprocessing tools with user created tools from several platforms (e.g., Python, R). 
* [Python](https://www.python.org/) - ArcGIS provides a robust scripting interface to its GIS tools using the Python language. Custom geospatial toolboxes can combine ESRI's COTS geoprocessing tools with tools available within the diverse, mature, and ever-growing Python data science ecosystem. 
* [R](https://cran.r-project.org/) - ESRI's [ArcGIS R-bridge](https://github.com/R-ArcGIS/r-bridge) product allows R tools to be called within the ArcGIS toolbox interface. This allows ArcGIS tools to take advantage of the mature ecosystem of R data science, statistical, visualization, and report generation packages. 


## Packages
The FluvialGeomorph toolbox is composed of a set of tightly connected packages that work together to complete the analysis. Modular design was a conscious architectural decision made to take advantage of the best tools and to help support long-term maintenance. Links are provided below to each package's online code repository. 

* The [`FluvialGeomorph`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox) toolbox - This is the primary user-facing software component. It is an ArcGIS toolbox organized as a Python package. The custom Python tools in this toolbox perform primarily geospatial operations, where the ESRI platform excels (e.g., linear referencing). It also performs the installation of the needed R packages. 
* The [`fluvgeo`](https://github.com/FluvialGeomorph/fluvgeo) R package - This custom R package developed for this project contains the bulk of the data science, statistical, visualization, and reporting functions, where the R platform excels. 
* The [`RegionalCurve`](https://github.com/FluvialGeomorph/RegionalCurve) R package - This custom R package developed for this project contains the data and functions for accessing regional hydraulic geometry studies. 


## ArcGIS Toolbox
The FluvialGeomorph toolbox contains a set of tools for analyzing streams. These tools are divided into four toolsets. 

### 01 - Install toolset
The purpose of this toolset is to hold the tools needed to install and troubleshoot the FluvialGeomorph toolbox software components. 


#### `Install R Packages`
**Purpose** - This tool installs the R packages required by the FluvialGeomorph toolbox using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/install.html#install-fluvialgeomorph). This tool also sets several configuration settings. 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/install/Install_FG_R.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/install/Install_FG_R.R). 

***

#### `R Session Info`
**Purpose** - This tool provides the output of the current R session. This is helpful for troubleshooting R environment issues during installation. 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/install/session.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/install/session.R). 

***

### 02 - Tools toolset
The purpose of this toolset is to hold the tools that perform the FluvialGeomorph analysis. 

#### `02 - Hydro DEM` {#hydro-dem-tool}
**Purpose** - This tool "burns" (sets the elevation to the same value for all pixels along the extent of the polyline feature) a [`cutlines`](#cutlines-fc) feature class into the supplied DEM and creates the [`dem_hydro`](#dem-hydro-raster) in the output workspace using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#hydro-modify-dem). See [this section](#hydro-modification-concept) for a detailed discussion of why hydro modification is required. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_02_HydroDEM.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_02_HydroDEM.py).

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "hydro_dem", "Hydro DEM Tool Parameters.")
```

```{r echo=FALSE, fig.cap="02 - Hydro DEM Tool Dialog."}
knitr::include_graphics("figures/toolbox/tool_Hydro_DEM.png")
```

***

#### `03 - Contributing Area` {#contributing-area-tool}
**Purpose** - This tool calculates the [D-infinity contributing area](https://hydrology.usu.edu/taudem/taudem5/help53/DInfinityContributingArea.html) for each pixel in the input DEM and creates a [`contributing_area`](#contributing-area-raster) raster in the output workspace using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-contributing-area). 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_03_ContributingArea.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_03_ContributingArea.py). This Python script uses the [TauDEM](https://hydrology.usu.edu/taudem/taudem5/index.html) [D-Infinity Contributing Area tool](https://hydrology.usu.edu/taudem/taudem5/help53/DInfinityContributingArea.html) to calculate the specific catchment area (which is the contributing area per unit contour length using the multiple flow direction D-infinity approach).

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "contributing_area", "Contributing Area Tool Parameters.")
```

```{r echo=FALSE, fig.cap="03 - Contributing Area Tool."}
knitr::include_graphics("figures/toolbox/tool_Contributing_Area.png")
```

***

#### `03a - Contributing Area D8` {#contributing-area-d8-tool}
**Purpose** - This tool creates the D8 [`flow_accumulation_d8`](#flow-accumulation-raster) and [`flow_direction_d8`](#flow-direction-raster) rasters in the output workspace for a given input DEM using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-contributing-area).  

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_03a_ContributingAreaD8.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_03a_ContributingAreaD8.py). 

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "contributing_area_D8", "Contributing Area D8 Tool Parameters.")
```

```{r echo=FALSE, fig.cap="03a - Contributing Area D8 Tool."}
knitr::include_graphics("figures/toolbox/tool_Contributing_Area_D8.png")
```

***

#### `04 - Stream Network` {#stream-network-tool}
**Purpose** - This tool creates the synthetic flow network [`stream_network`](#stream-network-fc) polyline feature class from a [`contributing_area`](#contributing-area-raster) raster for a given stream initiation threshold using these instruction in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#derive-stream-network). 

**Code** - The ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_04_StreamNetwork.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_04_StreamNetwork.py). 

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "stream_network", "Stream Network Tool Parameters.")
```

```{r echo=FALSE, fig.cap="04 - Stream Network Tool."}
knitr::include_graphics("figures/toolbox/tool_Stream_Network.png")
```

***

#### `04a - Stream Network Points` {#stream-network-points-tool}
**Purpose** - This tool converts the [`stream_network`](#stream-network-fc) to the [`stream_network_points`](#stream-network-points-fc) points feature class using the these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-flowline-points). This tool extracts elevation information from the DEM and calculates the drainage area. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_04a_StreamNetworkPoints.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_04a_StreamNetworkPoints.py). 

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "stream_network_points", "Stream Network Points Tool Parameters.")
```

```{r echo=FALSE, fig.cap="04a - Stream Network Point Tool."}
knitr::include_graphics("figures/toolbox/tool_Stream_Network_Points.png")
```

***

#### `04b - Slope and Sinuosity` {#slope-sinuosity-tool}
**Purpose** - This tool calculates the [`gradient_*`](#gradient-fc) points feature class for a [`flowline_points`](#flowline-points-fc) or [`stream_network`](#stream-network-fc) feature class using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-slope-and-sinuosity). 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/tools/_04b_Gradient.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_04b_Gradient.R). This Python script call the R function [`fluvgeo::slope_sinuosity`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/slope_sinuosity.R). 

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "slope_sinuosity", "Stream Network Points Tool Parameters.")
```

```{r echo=FALSE, fig.cap="04b - Slope and Sinuosity Tool."}
knitr::include_graphics("figures/toolbox/tool_Slope_and_Sinuosity.png")
```

***

#### `04c - Watershed` {#watershed-tool}
**Purpose** - This tool creates the [`watershed`](#watershed-fc) polygon feature class in the output workspace using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#delineate-watersheds). This tool calculates the extent of the upstream drainage area for each point feature in the input [`watershed_points`](#watershed-points-fc) point feature class. This tool optionally calculates the landcover proportion in each watershed feature. 

**Code** - This ArcGIS script tool calls the Python script  [`FluvialGeomorph-toolbox/tools/_04c_Watersheds.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_04c_Watersheds.py). 

**Parameters** - This tool contains the following parameters:
```{r, echo=FALSE}
params_table(params_df, "watershed", "Watershed Tool Parameters.")
```

```{r echo=FALSE, fig.cap="04c - Watershed Tool."}
knitr::include_graphics("figures/toolbox/tool_Watershed.png")
```

***

#### `05 - Flowline` {#flowline-tool}
**Purpose** - This tool creates a [`flowline`](#flowline-fc) feature class in the output workspace using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-the-flowline). This tool uses an edited [`stream_network`](#stream-network-fc) feature class to derive the [`flowline`](#flowline-fc). 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_05_Flowline.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_05_Flowline.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "flowline", "Flowline Tool Parameters.")
```

```{r echo=FALSE, fig.cap="05 - Flowline Tool."}
knitr::include_graphics("figures/toolbox/tool_Flowline.png")
```

***

#### `06 - Flowline Points` {#flowline-points-tool}
**Purpose** - This tool creates a [`flowline_points`](#flowline-points-fc) feature class in the output workspace using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-flowline-points). This tool converts a stream [`flowline`](#flowline-fc) feature class to a route and begins the stationing using the `km_to_mouth` parameter. This tool can optionally calibrate the output [`flowline_points`](#flowline-points-fc) using a point feature class. 

**Code** - This ArcGIS script tool calls the Python script  [`FluvialGeomorph-toolbox/tools/_06_FlowlinePoints.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_06_FlowlinePoints.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "flowline_points", "Flowline Points Tool Parameters.")
```

```{r echo=FALSE, fig.cap="06 - Flowline Points Tool."}
knitr::include_graphics("figures/toolbox/tool_Flowline_Points.png")
```

***

#### `07 - Detrend DEM` {#detrend-dem-tool}
This tool creates the [`detrend`](#detrend-raster) raster using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#define-initial-floodplain-and-channel-extent). This tool uses [`flowline_points`](#flowline-points-fc) to remove the elevation trend from the stream reach. See [this section](#detrending-concept) for a detailed discussion on detrended DEMs. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_07_DetrendDEM.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_07_DetrendDEM.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "detrend_dem", "Detrend DEM Tool Parameters.")
```

```{r echo=FALSE, fig.cap="07 - Detrend Tool."}
knitr::include_graphics("figures/toolbox/tool_Detrend_DEM.png")
```

***

#### `08 - Water Surface Extent` {#water-surface-extent}
**Purpose** - This tool creates the [`banks_raw`](#bankfull-area-fc) polygon feature class using these Level 1 instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#estimate-initial-channel-extent) and [these instructions](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#create-bankfull-area) for Level 2.

**Code** - This ArcGIS script tool calls the Python script [FluvialGeomorph-toolbox/tools/_08_WaterSurfaceExtent.py](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_08_WaterSurfaceExtent.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "water_surface_extent", "Water Surface Extent Tool Parameters.")
```

```{r echo=FALSE, fig.cap="08 - Water Surface Extent Tool."}
knitr::include_graphics("figures/toolbox/tool_Water_Surface_Extent.png")
```

***

#### `09 - Channel Slope` {#channel-slope-tool}
**Purpose** - This tool creates the [`channel_slope`](#channel-slope-raster) raster using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-channel-slope-raster). This tool uses banks extent polygon to calculate a slope raster for the channel area. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_09_ChannelSlope.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_09_ChannelSlope.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "channel_slope", "Channel Slope Tool Parameters.")
```

```{r echo=FALSE, fig.cap="09 - Channel Slope Tool."}
knitr::include_graphics("figures/toolbox/tool_Channel_Slope.png")
```

***

#### `10 - Centerline` {#centerline-tool}
**Purpose** - This tool creates the [`centerline`](#centerline-fc) polyline feature class using these instructions for [Level 1](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-initial-centerline) and [Level 2](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-initial-centerline) from the user manual. The centerline is the strem flow path that lies midway between the banks at bankfull. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_10_Centerline.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_10_Centerline.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "centerline", "Centerline Tool Parameters.")
```

```{r echo=FALSE, fig.cap="10 - Centerline Tool."}
knitr::include_graphics("figures/toolbox/tool_Centerline.png")
```

***

#### `11 - XS Layout` {#xs-layout-tool}
**Purpose** - This tool creates the [`xs_*`](#regular-xs-fc) polyline feature class using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-regular-cross-section-geometry). This tool creates a set of regularly spaced cross sections along the input [`flowline`](#flowline-fc) at the specified longitudinal spacing and lateral width. The output feature class is named `xs_<transect_spacing>_<transect_width>`. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_11_XSLayout.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_11_XSLayout.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_layout", "Cross Section Layout Tool Parameters.")
```

```{r echo=FALSE, fig.cap="11 - XS Layout Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Layout.png")
```

***

#### `12 - XS Watershed Area` {#xs-watershed-area-tool}
**Purpose** - This tool adds or updates the field `Watershed_Area_SqMile` to the input cross section feature class using these instructions for [`Level 1`](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-cross-section-watershed-area) and [`Level 2`](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#calculate-cross-section-watershed-area-1) from the user manual. This field records the upstream drainage area for the cross section. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_12_XSWatershedArea.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_12_XSWatershedArea.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_watershed_area", "Cross Section watershed Area Tool Parameters.")
```

```{r echo=FALSE, fig.cap="12 - XS Watershed Area Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Watershed_Area.png")
```

***

#### `13 - XS River Position` {#xs-river-position}
**Purpose** - This tool adds or updates the field `km_to_mouth` to the input cross section feature class using these instructions for [`Level 1`](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-cross-section-river-position) and [`Level 2`](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#calculate-cross-section-river-position-1) from the user manual. This field records the distance of the cross section from the mouth of the site. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/blob/_13_XSRiverPosition.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_13_XSRiverPosition.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_river_position", "Cross Section River Position Tool Parameters.")
```

```{r echo=FALSE, fig.cap="13 - XS River Position Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_River_Position.png")
```

***

#### `13a - XS Resequence` {#xs-resequence-tool}
**Purpose** - This tools reorders the values of the `Seq` field for the input cross section feature class using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#create-regular-cross-sections). 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_13a_XSResequence.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_13a_XSResequence.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_resequence", "Cross Section Resequence Tool Parameters.")
```

```{r echo=FALSE, fig.cap="13a - XS Resequence Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Resequence.png")
```

***

#### `14 - XS Points` {#xs-points-tool}
**Purpose** - This tool creates the [`*_points`](#xs-points-fc) points feature class using the these instructions for [Level 1](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-cross-section-points) and [Level 2](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#calculate-cross-section-points-1) from the user manual. This tool converts a cross section polyline feature class (i.e., `xs_*`, `riffle_floodplain`, `riffle_channel`) into a series of points stationed at the `station_distance` along the input cross section. The name of the input cross section prepended to the output feature class: `<cross_section name>_points`. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_14_XSPoints.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_14_XSPoints.py).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_points", "Cross Section Points Tool Parameters.")
```

```{r echo=FALSE, fig.cap="14 - XS Points Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Points.png")
```

***

#### `14b - Bankline Points` {#bankline-points-tool}
**Purpose** - This tool creates the [`bankline_points`](#bankline-points-fc) using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-3-workflow.html#derive-bankline-points). This tool uses the [`loop_points`](#loop-points-fc) and [`valleyline`](#valleyline-fc) that the analyst manually created in previous steps. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_14b_BanklinePoints.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_14b_BanklinePoints.py)

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "bankline_points", "Bankline Points Tool Parameters.")
```

```{r echo=FALSE, fig.cap="14b - Bankline Points Tool."}
knitr::include_graphics("figures/toolbox/tool_Bankline_Points.png")
```

***

#### `14c - XS Assign Loops` {#xs-assign-loops-tool}
**Purpose** - This tool assigns loops and bends to input cross section feature class using the input [`bankline_points`](#bankline-points-fc) using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-3-workflow.html#assign-cross-section-loops). 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_14c_XSAssignLoops.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_14c_XSAssignLoops.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "assign_loops", "Assign Loops Tool Parameters.")
```

```{r echo=FALSE, fig.cap="14c - XS Assign Loops Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Assign_Loops.png")
```

***

#### `15a - XS Dimensions, Level 1` {#xs-dimensions-L1-tool}
**purpose** - This tool calculates [Level 1 cross section dimensions](#xs-dimensions-fc) for the input cross section feature class (i.e., [regular cross sections](#regular-xs-fc)) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#calculate-cross-section-l1-dimensions).

**Code** - This ArcGIS script tool calls the Python script [FluvialGeomorph-toolbox/tools/_15a_XSDimensions.R](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_15a_XSDimensions.R) which calls the R function [`fluvgeo::cross_section_dimensions_L1`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/cross_section_dimensions_L1.R). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_dimensions_L1", "XS Dimensions, Level 1 Tool Parameters.")
```

```{r echo=FALSE, fig.cap="15a - XS Dimensions, Level 1 Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Dimensions_L1.png")
```

***

#### `15b - XS Dimensions, Level 2` {#xs-dimensions-L2-tool}
**Purpose** - This tool calculates [Level 3 cross section dimensions](#xs-dimensions-fc) for the input cross section feature class (i.e., [regular cross sections](#regular-xs-fc), [riffle cross sections](#riffle-xs-fc)) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#calculate-final-l2-cross-section-geometry).

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_15b_XSDimensions.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_15b_XSDimensions.R)

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_dimensions_L2", "XS Dimensions, Level 2 Tool Parameters.")
```

```{r echo=FALSE, fig.cap="15b - XS Dimensions, Level 2 Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Dimensions_L2.png")
```

***

#### `15c - XS Planform, Level 3` {#xs-dimensions-L3-tool}
**Purpose** - This tool calculates [Level 3 cross section dimensions](#xs-dimensions-fc) for the input cross section feature class (i.e., [regular cross sections](#regular-xs-fc), [riffle cross sections](#riffle-xs-fc)) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-3-workflow.html#calculate-l3-cross-section-geometry). 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph/FluvialGeomorph-toolbox/tools/_15c_XSPlanform.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_15c_XSPlanform.R) which calls the R functions [`fluvgeo::planform_dimensions`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/planform_dimensions.R) to calculate the planform dimensions and [`fluvgeo::xs_metric_ratios`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/xs_metric_ratios.R) to calculate the metric ratios. 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "xs_dimensions_L3", "XS Dimensions, Level 3 Tool Parameters.")
```

```{r echo=FALSE, fig.cap="15b - XS Dimensions, Level 3 Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_Dimensions_L3.png")
```

***

#### `16 - XS RAS Watersurface` {#xs-ras-watersurface-tool}
**Purpose** - This tool adds or updates the field `ras_wse_*` to a [cross section dimensions](#xs-dimensions-fc) feature class using these instructions for [Level 2](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#add-modeled-water-surface-elevation) and [Level 3](https://fluvialgeomorph.github.io/FG-User-Manual/level-3-workflow.html#add-modeled-water-surface-elevation-1) from the user manual. 

**Code** - This ArcGIS script tool calls the Python script [`FluvialGeomorph-toolbox/tools/_16_XS_RAS_WaterSurface.py`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/tools/_16_XS_RAS_WaterSurface.py). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "ras_watersurface", "XS RAS Watersurface Tool Parameters.")
```

```{r echo=FALSE, fig.cap="16 - XS RAS Watersurface Tool."}
knitr::include_graphics("figures/toolbox/tool_XS_RAS_Watersurface.png")
```

### 03 - Reports toolset
The purpose of this toolset is to hold the tools that produce the FluvialGeomorph reports. 

#### `Graph - Longitudinal Profile Compare` {#longitudinal-profile-compare-graph-tool}
**Purpose** - This tool produces the [longitudinal profile plot](#longitudinal-profile-compare-graph) from the [`flowline_points`](#flowline-points-fc) feature classes of a stream reach taken from one or more surveys. This tool compares longitudinal profile plots from multiple surveys. It labels the plot using the [`features`](#features-fc) feature class along the x-axis. 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox\report\_Longitudinal_Profile_Compare.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Longitudinal_Profile_Compare.R) which calls the R function  [`fluvgeo::compare_long_profile`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/compare_long_profile.R). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "longitudinal_profile_compare", "Longitudinal Profile Compare Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Graph - Longitudinal Profile Compare Tool."}
knitr::include_graphics("figures/toolbox/tool_Graph-Longitudinal_Profile_Compare.png")
```

***

#### `Graph - XS Longitudinal Profile Compare` {#xs-longitudinal-profile-compare-graph-tool}
Tool in progress. 

#### `Map - Reach Overview` {#reach-overview-map-tool}
**Purpose** - This tool produces a [reach overview map]() figure from a [`flowline`](#flowline-fc) and a [regular cross section](#regular-xs-fc) or a [riffle cross section](#riffle-xs-fc) feature class. 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/report/_Reach_Overview_Map.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Reach_Overview_Map.R) which calls the R function [`fluvgeo::map_reach_overview`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/map_reach_overview.R).  

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "reach_overview_map", "Reach Overview Map Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Map - Reach Overview Tool."}
knitr::include_graphics("figures/toolbox/tool_Map-Reach_Overview.png")
```

#### `Report - L1` {#L1-report-tool}
**Purpose** - This tool produces the [Level 1 Report](#L1-report) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-1-workflow.html#run-report).  

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/report/_Level_1_Report.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Level_1_Report.R) which calls the R function [`fluvgeo::level_1_report`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/level_1_report.R).

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "L1_report", "Reach Overview Map Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Level 1 Report."}
knitr::include_graphics("figures/toolbox/tool_Report-L1.png")
```


#### `Report - L2 Estimate Bankfull` {#estimate-bankfull-report-tool}
**Purpose** - This tool produces the [Estimate Bankfull Report](#estimate-bankfull-report) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#estimate-bankfull). 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/report/_Estimate_Bankfull.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Estimate_Bankfull.R). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "estimate_bankfull_report", "Estimate Bankfull Report Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Estimate Bankfull Tool."}
knitr::include_graphics("figures/toolbox/tool_Report-L2_Estimate_Bankfull.png")
```

#### `Report - L2` {#L2-report-tool}
**Purpose** - This tool produces the [Level 2 Report](#L2-report) using these instructions from the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-2-workflow.html#run-report-1). 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/report/_Level_2_Report.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Level_2_Report.R) which calls the R function [`fluvgeo::level_2_report`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/level_2_report.R). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "L2_report", "Level 2 Report Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Level 2 Report."}
knitr::include_graphics("figures/toolbox/tool_Report-L2.png")
```


***

#### `Report - L3` {#L3-report-tool}
**Purpose** - This tool produces the [Level 3 Report](#L3-report) using these instructions in the [user manual](https://fluvialgeomorph.github.io/FG-User-Manual/level-3-workflow.html#run-report-2). 

**Code** - This ArcGIS script tool calls the R script [`FluvialGeomorph-toolbox/report/_Level_3_Report.R`](https://github.com/FluvialGeomorph/FluvialGeomorph-toolbox/blob/master/report/_Level_3_Report.R) which called the R function [`fluvgeo::level_3_report`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/level_3_report.R). 

**Parameters** - This tool contains the following parameters: 
```{r, echo=FALSE}
params_table(params_df, "L3_report", "Level 3 Report Tool Parameters.")
```

```{r echo=FALSE, fig.cap="Level 3 Report."}
knitr::include_graphics("figures/toolbox/tool_Report-L3.png")
```


### 04 - Symbology toolset
The purpose of this toolset is to hold the tools that standardize the symbolization of FluvialGeomorph datasets. Given the complexity of the datasets involved in this analysis, consistent symbolization improves interpretation and speeds analysis. 

#### `Banklines` {#banklines-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`banklines`](#banklines-fc) feature class. 

#### `Contibuting Area` {#contributing-area-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`contributing_area`](#contributing-area-fc) feature class. 

#### `Cross Section` {#cross-section-symbol-tool}
Applies standard FluvialGeomorph symbology to the cross section feature classes (i.e., [`regular cross sections`](#regular-xs-fc), [`riffle_floodplain` and `riffle_channel`](#riffle-xs-fc), and [cross section dimensions](#xs-dimensions-fc)). 

#### `DEM` {#dem-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`dem_hydro`](#dem-hydro-raster) raster. 

#### `Features` {#features-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`features`](#features-fc) feature class. 

#### `Flowline` {#flowline-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`flowline`](#flowline-fc) feature class. 

#### `Flowline Points` {#flowline-points-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`flowline_points`](#flowline-points-fc) feature class. 

#### `Loop Points` {#loop-points-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`loop_points`](#loop-points-fc) feature class. 

#### `Valleyline` {#valleyline-symbol-tool}
Applies standard FluvialGeomorph symbology to the [`valleyline`](#valleyline-fc) feature class. 

***

### 05 - Check toolset
The purpose of this toolset is to hold the tools used to check FluvialGeomorph features for some common, preventable errors. 

#### `Check Banklines` {#check-banklines-tool}
This ArcGIS script tool checks the [`banklines`](#banklines-fc) feature class using the R function [`fluvgeo::check_banklines`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_banklines.R). 

#### `Check Bankline Points` {#check-bankline-points-tool}
This ArcGIS script tool checks the [`bankline_points`](#bankline-points-fc) feature class using the R function [`fluvgeo::check_bankline_points`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_bankline_points.R). 

#### `Check Cross Section` {#check-cross-section-tool}
This ArcGIS script tool checks the cross section feature classes (i.e., [`regular cross sections`](#regular-xs-fc), [`riffle_floodplain` and `riffle_channel`](#riffle-xs-fc), and [cross section dimensions](#xs-dimensions-fc)) using the R function [`fluvgeo::check_cross_section`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_cross_section.R). 

#### `Check Cross Section Points` {#check-cross-section-points-tool}
This ArcGIS script tool checks the [cross section points, `*_points`](#xs-points-fc) feature class using the R function [`fluvgeo::check_cross_section_points`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_cross_section_points.R). 

#### `Check Features` {#check-features-tool}
This ArcGIS script tool checks the [`features`](#features-fc) feature class using the R function [`fluvgeo::check_cross_section_points`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_cross_section_points.R). 

#### `Check Flowline` {#check-flowline-tool}
This ArcGIS script tool checks the [`flowline`](#flowline-fc) feature class using the R function [`fluvgeo::check_flowline`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_flowline.R). 

#### `Check Flowline Points` {#check-flowline-points-tool}
This ArcGIS script tool checks the [`flowline_points`](#flowline-points-fc) feature class using the R function [`fluvgeo::check_flowline_points`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_flowline_points.R). 

#### `Check Loop Points` {#check-loop-points-tool}
This ArcGIS script tool checks the [`loop_points`](#loop-points-fc) feature class using the R function [`fluvgeo::check_loop_points`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_loop_points.R). 

#### `Check Valleyline` {#check-valleyline-tool}
This ArcGIS script tool checks the [`valleyline`](#valleyline-fc) feature class using the R function [`fluvgeo::check_valleyline`](https://github.com/FluvialGeomorph/fluvgeo/blob/master/R/check_valleyline.R). 

***

### 06 - Export toolset
The purpose of this toolset is to export the tabular data from geospatial datasets for further analysis. 

#### `Level 1` {#L1-export-tool}
This ArcGIS script tool exports the tabular data from these Level 1 feature classes: [`flowline_points`](#flowline-points-fc), [regular cross sections](#regular-xs-fc), [cross section points](#xs-points-fc), and [`features`](#features-fc). 

#### `Level 2` {#L2-export-tool}

#### `Level 3` {#L3-export-tool}
